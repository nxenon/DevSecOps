import requests
import matplotlib.pyplot as plt


URL = "https://DEPENDENCY_TRACK_URL:PORT"
ALL_PRODUCTS_TAGS = ["PRODUCT_TAG1", "PRODUCT_TAG2"]


def login(user: str, password: str) -> str:
    url = URL + "/api/v1/user/login"
    req = requests.post(url, data={"username": user, "password": password}, verify=False)
    if req.status_code == 200:
        return str(req.content.decode())
    print("Error Occurred in Login: ", req.content)
    exit(1)


def get_all_products(_token: str, tag: str) -> dict:
    url = URL + f"/api/v1/project/tag/{tag}"
    h = {"Authorization": f"Bearer {_token}"}
    req = requests.get(url, headers=h, verify=False)
    if req.status_code == 200:
        return req.json()
    print("Error in query products! : ", req.content)
    exit(1)


def get_products_metrics(products: dict) -> dict:
    all_metrics = {
        "critical_num": 0,
        "high_num": 0,
        "medium_num": 0,
        "low_num": 0,
        "unassigned_num": 0,
        "all_vuln": 0,
        "service_num": 0,
    }
    for p in products:
        metrics = p["metrics"]
        all_metrics["service_num"] += 1
        all_metrics["critical_num"] += metrics["critical"]
        all_metrics["high_num"] += metrics["high"]
        all_metrics["medium_num"] += metrics["medium"]
        all_metrics["low_num"] += metrics["low"]
        all_metrics["unassigned_num"] += metrics["unassigned"]
        all_metrics["all_vuln"] += metrics["vulnerabilities"]

    return all_metrics


def visualize_metrics(metrics: dict, system: str):
    categories = ['Critical', 'High', 'Medium', 'Low', 'Unassigned']
    values = [
        metrics['critical_num'], metrics['high_num'],
        metrics['medium_num'], metrics['low_num'],
        metrics['unassigned_num']
    ]
    colors = ['#611313', 'red', 'orange', 'yellow', '#A9A9A9']
    plt.bar(categories, values, color=colors)
    # plt.yticks(range(0, max(values) + 10, 10))

    plt.xlabel('Vulnerability Severity')
    plt.ylabel('Number of Vulnerabilities')
    plt.title(f'Vulnerabilities in {system} (Total: {metrics["all_vuln"]}) for {metrics["service_num"]} Services')
    plt.show()


def perform_for_multi_product():
    token = login(user="USERNAME", password="PASSWORD")
    threads = []
    for tag in ALL_PRODUCTS_TAGS:
        products_by_tag = get_all_products(token, tag=tag)
        all_metrics = get_products_metrics(products=products_by_tag)
        visualize_metrics(all_metrics, tag)


perform_for_multi_product()
input()
